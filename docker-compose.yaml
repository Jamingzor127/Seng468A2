version: '3.5'

networks:
  servers:
  databases:
  kafka:

services:
  nginx:
    build:
      context: ./nginx_load_balancer/
      dockerfile: nginx_dockerfile
    depends_on:
      - mongo
      - redis
      - kafka
      - social-media-api-1
      - social-media-api-2
      - social-media-api-3
    ports:
      - "127.0.0.1:5001:5001"
    restart: always
    networks:
      - servers

  mongo:
    container_name: mongo
    image: mongo:3.5
    restart: always
    environment:
       - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
       - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - 127.0.0.1:${MONGO_PORT}:27017
    networks: 
      - databases

  redis:
    container_name: redis
    image: redis:7.0.4-alpine
    restart: always
    ports:
      - 127.0.0.1:${REDIS_PORT}:6379
    command: redis-server --loglevel warning
    networks: 
      - databases

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka

  kafka: 
    container_name: kafka
    image: bitnami/kafka:3.4.0
    restart: always
    ports:
      - 127.0.0.1:${KAFKA_PORT}:9092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - kafka
    depends_on:
      - zookeeper

  kafka_ui:
    container_name: kafka_ui
    image: provectuslabs/kafka-ui:latest
    restart: always
    ports:
      - 127.0.0.1:8080:8080
    environment:
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - kafka
    depends_on:
      - kafka
    

  social-media-api-1:
    container_name: social-media-api-1
    image: nestjs-api
    build: ./a2_project
    env_file:
    - .env
    depends_on:
      - mongo
      - redis
    networks: 
      - databases
      - servers
      - kafka
  social-media-api-2:
    container_name: social-media-api-2
    image: nestjs-api
    build: ./a2_project
    env_file:
    - .env
    depends_on:
      - mongo
      - redis
    networks: 
      - databases
      - servers
      - kafka
  social-media-api-3:
    container_name: social-media-api-3
    image: nestjs-api
    build: ./a2_project
    env_file:
    - .env
    depends_on:
      - mongo
      - redis
    networks: 
      - databases
      - servers
      - kafka
volumes:
  redis:
    driver: local
